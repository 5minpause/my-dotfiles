export PATH="$(brew --prefix openssl)/bin:$HOME/.bin:$PATH"
export PATH="/usr/local/opt/mysql@5.7/bin:$PATH"
export LDFLAGS="-L/usr/local/opt/mysql@5.7/lib"
export CPPFLAGS="-I/usr/local/opt/mysql@5.7/include"
# export PKG_CONFIG_PATH="/usr/local/opt/mysql@5.7/lib/pkgconfig"

# Setting for usin OpenSSL installed via Homebrew
export LDFLAGS="-L$(brew --prefix openssl@1.1)/lib"
export CPPFLAGS="-I$(brew --prefix openssl@1.1)/include"
export PKG_CONFIG_PATH="$(brew --prefix openssl@1.1)/lib/pkgconfig"
# Finish settings for using OpenSSL

# Link ruby-build to Homebrew's OpenSSL
export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl) --with-readline-dir=$(brew --prefix readline) --with-libyaml-dir=$(brew --prefix libyaml)"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
[[ -f /usr/local/Cellar/nvm/**/nvm.sh ]] && source $(brew --prefix nvm)/nvm.sh

if command -v rbenv &> /dev/null; then
  eval "$(rbenv init -)"
fi

[[ -f ~/.asdf/asdf.h ]] && source ~/.asdf/asdf.h

# RPROMPT="[%D{%f.%m.%y}|%T]"

export JAVA_HOME="/Library/Java/JavaVirtualMachines/jdk-12.0.2.jdk/Contents/Home"
# source "$HOME/.tmuxinator.zsh"


export PATH="${JAVA_HOME}/bin:$HOME/.bin:$PATH"
# export PATH="/usr/local/opt/postgresql@11/bin:$PATH"

export DISABLE_SPRING=true

# Perform interactive rebase, exclusive to commits on the current branch
gbir() {
  git rebase -i --autosquash $(git merge-base --fork-point "$@" $(git rev-parse --abbrev-ref HEAD))
}

# Apply working dir changes to the last commit w/o editing its message
gfu() {
  git commit --amend --no-edit
}

changes() {
  git sl | tac
}
if command -v starship &> /dev/null; then
  eval "$(starship init zsh)"
fi

# adding shhist to PATH, so we can use it from Terminal
PATH="${PATH}:/Applications/ShellHistory.app/Contents/Helpers"

# creating an unique session id for each terminal session
__shhist_session="${RANDOM}"

# prompt function to record the history
__shhist_prompt() {
    local __exit_code="${?:-1}"
    history -D -t "%s" -1 | sudo --preserve-env --user ${SUDO_USER:-${LOGNAME}} shhist insert --session ${TERM_SESSION_ID:-${__shhist_session}} --username ${LOGNAME} --hostname $(hostname) --exit-code ${__exit_code}
    return ${__exit_code}
}

# integrating prompt function in prompt
precmd_functions=(__shhist_prompt $precmd_functions)

eval "$(direnv hook zsh)"


# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/holgerfrohloff/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/holgerfrohloff/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/holgerfrohloff/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/holgerfrohloff/google-cloud-sdk/completion.zsh.inc'; fi
